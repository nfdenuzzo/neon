(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["home"],{"54c2":function(e,t,o){"use strict";o.r(t);var i,n=function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",{staticClass:"homepage"},[o("div",{staticClass:"homepage__content"},[o("h1",[e._v("What is Neon?")]),o("p",[e._v(" Neon is an incredibly lightweight library of Vue components and SASS styles for helping you build performant Vue applications. Neon supports multiple themes as well light and dark modes within each theme. Use Neon out of the box or modify it to suit your needs. ")]),o("neon-button",{attrs:{href:"/for-developers/getting-started",color:"brand",size:"xl","button-style":"solid",label:"Get started"}}),o("h1",[e._v("Why Neon?")]),e._m(0),o("div",{staticClass:"highlights"},[o("div",{staticClass:"highlight"},[o("neon-icon",{staticClass:"highlight-icon",attrs:{name:"color-filter"}}),o("h2",[e._v("Color palette generation")]),o("p",[e._v(" Most design systems either provide fixed color palettes or require developers to generate their own. This can be time consuming and difficult to get right. In Neon, these options are still available but there is also the ability to generate WCAG contrast compliant color palettes from single colors. ")]),o("neon-button",{attrs:{href:"/design/color",color:"brand","button-style":"outline",label:"Learn more about Colors",size:"l"}})],1),o("div",{staticClass:"highlight"},[o("neon-icon",{staticClass:"highlight-icon",attrs:{name:"html-logo"}}),o("h2",[e._v("Semantic HTML components")]),o("p",[e._v(" Another thing a lot of component libraries do poorly is use nested divs instead of semantic HTML. Neon aims to use semantic HTML, where possible, which means better performance, easier debugging and improved accessibility. ")]),o("neon-button",{attrs:{href:"/for-developers/getting-started",color:"brand","button-style":"outline",label:"Start using Components",size:"l"}})],1)]),o("div",{staticClass:"highlights"},[o("div",{staticClass:"highlight"},[o("neon-icon",{staticClass:"highlight-icon",attrs:{name:"palette"}}),o("h2",[e._v("Multiple themes")]),o("p",[e._v(" Most design systems provide a single theme which is a concept from native mobile applications which is great for providing consistency across applications on devices. But this idea is quite boring and doesn't help differentiate applications from one another on the web. Neon provides multiple themes to suit a wider variety of tastes and styles. ")]),o("neon-button",{attrs:{href:"/design/theming",color:"brand","button-style":"outline",label:"More about Themes",size:"l"}})],1),o("div",{staticClass:"highlight"},[o("neon-icon",{staticClass:"highlight-icon",attrs:{name:"contrast"}}),o("h2",[e._v("Light and dark modes")]),o("p",[e._v(" With growing support for light and dark modes in browsers design systems also need to provide this option. Neon provides light and dark modes for all themes. ")]),o("neon-button",{attrs:{href:"/design/theming#dark-mode",color:"brand","button-style":"outline",label:"Find out more about dark mode",size:"l"}})],1),o("div",{staticClass:"highlight"},[o("neon-icon",{staticClass:"highlight-icon",attrs:{name:"hammer"}}),o("h2",[e._v("Customization")]),o("p",[e._v(" Not quite happy with the themes provided?"),o("br"),e._v("Then customize it! Current Javascript frameworks encapsulate CSS making it difficult to override anything. Neon takes a different approach, where SASS styles are open to be overridden. Neon uses "),o("neon-link",{attrs:{href:"http://getbem.com/"}},[e._v("BEM")]),e._v(" and "),o("neon-link",{attrs:{href:"https://semver.org/"}},[e._v("SEMVER")]),e._v(" so if a class changes you'll know about it. ")],1),o("neon-button",{attrs:{href:"/for-developers/getting-started#sass",color:"brand","button-style":"outline",label:"Find out about Customization",size:"l"}})],1)]),o("div",{staticClass:"highlights"},[o("div",{staticClass:"highlight"},[o("neon-icon",{staticClass:"highlight-icon",attrs:{name:"images"}}),o("h2",[e._v("Icon libraries")]),o("p",[e._v(" Icon libraries are tricky. Either you need to include a heavyweight icon font which doesnt allow you to select only the icons you need or you will have to write some code to integrate a font library in javascript which is not very flexible if you need to add a custom icon. Neon's approach is to provide an icon registry and a component for rendering icons. Add your own SVGs as icons and they will be available in all of the functional colors in both light and dark themes. ")]),o("neon-button",{attrs:{href:"/presentation/icon",color:"brand","button-style":"outline",label:"Learn more about Icons",size:"l"}})],1),o("div",{staticClass:"highlight"},[o("neon-icon",{staticClass:"highlight-icon",attrs:{name:"desktop"}}),o("h2",[e._v("Responsive layout")]),e._m(1),o("neon-button",{attrs:{href:"/layout/grid",color:"brand","button-style":"outline",label:"Show me how to use Grid",size:"l"}})],1)]),o("span",{staticClass:"powered-by neon-color-text-neutral"},[e._v(" No "+e._s(e.developers)+" developers were harmed making Neon."),o("br"),e._v("This site was developed using "),o("neon-link",{attrs:{href:"https://vuejs.org/"}},[e._v("VueJS")]),e._v(" and Neon oâ€¿o ")],1)],1)])},s=[function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("p",[e._v(" Why yet another design system/component library?"),o("br"),e._v("There are several issues with other component libraries which Neon aims to solve. ")])},function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("p",[e._v(" The 12 column grid (and other variants) are outdated and inflexible. How many times have you had to add classes like "),o("em",[e._v('class="col-4"')]),e._v(" to your HTML? That's not very semantic at different breakpoints. CSS Grid is here and great at providing flexible layouts but it can be difficult to understand. Neon abstracts this by using a single grid for layout of the main content letting you define the grid in code at each responsive breakpoint. ")])}],a=o("276c"),r=o("e954"),l=o("920b"),h=o("92a6"),c=o("9ab4"),d=o("60a3"),u=o("7994"),g=i=function(e){Object(l["a"])(o,e);var t=Object(h["a"])(o);function o(){return Object(a["a"])(this,o),t.apply(this,arguments)}return Object(r["a"])(o,[{key:"developers",get:function(){return i.developerType[Math.floor(10*Math.random())%i.developerType.length]}}]),o}(d["c"]);g.developerType=["React","Angular","GWT","Scala.js","Less","Lodash","JQuery","Bootstrap"],g=i=Object(c["a"])([Object(d["a"])({components:{NeonCard:u["g"],NeonCardBody:u["h"],NeonCardHeader:u["i"],NeonLink:u["A"]}})],g);var p=g,v=p,m=o("2877"),b=Object(m["a"])(v,n,s,!1,null,null,null);t["default"]=b.exports}}]);